<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://poodlepoodle.github.io/</id><title>✨poodle.log()✨</title><subtitle>poodlepoodle</subtitle> <updated>2022-07-21T22:46:25+09:00</updated> <author> <name>Eojin Choi</name> <uri>https://poodlepoodle.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://poodlepoodle.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://poodlepoodle.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Eojin Choi </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>📄 백준 14890번 - 경사로 (구현)</title><link href="https://poodlepoodle.github.io/posts/algorithm-boj-14890/" rel="alternate" type="text/html" title="📄 백준 14890번 - 경사로 (구현)" /><published>2022-07-21T06:35:56+09:00</published> <updated>2022-07-21T06:35:56+09:00</updated> <id>https://poodlepoodle.github.io/posts/algorithm-boj-14890/</id> <content src="https://poodlepoodle.github.io/posts/algorithm-boj-14890/" /> <author> <name>Eojin Choi</name> </author> <category term="algorithm" /> <category term="baekjoon" /> <summary> 📄 문제 소개 백준 14890번 : 경사로 링크 : https://www.acmicpc.net/problem/14890 입력 N에 따라 N * N 크기의 정사각형 모양 지도가 주어지고, 각 칸의 높이가 주어졌을 때 행 + 열 12개의 길 중에 지나갈 수 있는 길의 개수를 모두 출력하는 문제이다. 모든 칸의 높이가 같음 -&amp;gt; 지나갈 수 있음 칸의 높이가 달라질 경우 -&amp;gt; 지나갈 수 없음 그러나, 입력과 함께 주어진 L 길이 이상의 공간이 있다면 경사로를 놓아 높이가 1 차이나는 칸을 잇는다면 -&amp;gt; 지나갈 수 있음 지나갈 수 있는 길에 대한 규칙은 위와 같다. 다만, 위의 규칙에 따라 경사로가 이미 놓여졌다면 그 칸에 경사로를 중복해서 놓을 수는 없다. 예제로 ... </summary> </entry> <entry><title>📄 백준 1091번 - 카드 섞기 (구현)</title><link href="https://poodlepoodle.github.io/posts/algorithm-boj-1091/" rel="alternate" type="text/html" title="📄 백준 1091번 - 카드 섞기 (구현)" /><published>2022-07-20T23:03:42+09:00</published> <updated>2022-07-20T23:03:42+09:00</updated> <id>https://poodlepoodle.github.io/posts/algorithm-boj-1091/</id> <content src="https://poodlepoodle.github.io/posts/algorithm-boj-1091/" /> <author> <name>Eojin Choi</name> </author> <category term="algorithm" /> <category term="baekjoon" /> <summary> 📄 문제 소개 백준 1091번 : 카드 섞기 링크 : https://www.acmicpc.net/problem/1091 플레이어는 총 3명이 있고, 카드는 N개(3의 배수)가 있다고 했을 때, 섞는 방법 S에 따라 몇 번 섞어야 정해진 목표 P대로 카드를 나누어 줄 수 있을지 출력하는 문제이다. 또한, 아무리 섞어도 카드를 정해진 목표 P대로 나누어 줄 수 없을 때에는 불가능함 또한 출력해야 한다. 📗 문제풀이 과정 🧐 일단 생각해 볼 것 딜러가 할 수 있는 행동은 2가지가 있다. 카드를 나누어 준다. 카드를 섞는다. 카드를 나누어 준다. 1의 경우, 0번째 카드가 0번째 플레이어에게, 1번째 카드가 1번째 플레이어에게, 2번째 카드가 2번째 플레이어에게,… i번째... </summary> </entry> <entry><title>📄 백준 16509번 - 장군 (구현, BFS)</title><link href="https://poodlepoodle.github.io/posts/algorithm-boj-16509/" rel="alternate" type="text/html" title="📄 백준 16509번 - 장군 (구현, BFS)" /><published>2022-07-20T21:27:29+09:00</published> <updated>2022-07-20T21:27:29+09:00</updated> <id>https://poodlepoodle.github.io/posts/algorithm-boj-16509/</id> <content src="https://poodlepoodle.github.io/posts/algorithm-boj-16509/" /> <author> <name>Eojin Choi</name> </author> <category term="algorithm" /> <category term="baekjoon" /> <summary> 📄 문제 소개 백준 16509번 : 장군 링크 : https://www.acmicpc.net/problem/16509 가로 10 * 세로 9 크기의 장기 판이 주어지고 상의 초기 위치와 왕의 초기 위치가 주어졌을 때, 상이 왕에게 도달할 수 있는 최소 이동 횟수를 출력하는 문제이다. 📗 문제풀이 과정 🧐 일단 생각해 볼 것 장기에 대해서는 잘 모르지만… 친절하게도 문제에서 상의 움직임에 대해서 설명을 해 줬기 때문에 아래와 같이 상이 다음에 움직일 수 있는 칸을 정리할 수 있다. 상/하/좌/우 방향으로 1칸 먼저 움직인다. 움직인 칸에서 대각선 4방향으로 2칸 움직인다. 따라서 현재 상의 위치에 따라서 장기 판에서 벗어나지만 않는다면 상은 최대 8개 칸에 대해 다음에 움직일... </summary> </entry> <entry><title>📄 백준 14499번 - 주사위 굴리기 (구현)</title><link href="https://poodlepoodle.github.io/posts/algorithm-boj-14499/" rel="alternate" type="text/html" title="📄 백준 14499번 - 주사위 굴리기 (구현)" /><published>2022-07-18T16:14:04+09:00</published> <updated>2022-07-18T16:14:35+09:00</updated> <id>https://poodlepoodle.github.io/posts/algorithm-boj-14499/</id> <content src="https://poodlepoodle.github.io/posts/algorithm-boj-14499/" /> <author> <name>Eojin Choi</name> </author> <category term="algorithm" /> <category term="baekjoon" /> <summary> 📄 문제 소개 백준 14499번 : 주사위 굴리기 링크 : https://www.acmicpc.net/problem/14499 입력 N, M에 따라 N * M 크기의 지도가 주어지고 주사위의 초기 위치가 주어졌다고 할 때, 주사위가 정해진 명령 및 규칙에 따라 굴려지면서 변화하는 매 순간의 주사위의 윗 면을 출력하는 문제이다. 📗 문제풀이 과정 🧐 일단 생각해 볼 것 지도의 정보가 주어져 있다고 했을 때, 주사위를 굴리는 명령에 따른 주사위의 동작을 Pseudo Code로 작성해 봤다. 명령에 따른 주사위의 동작을 나타낸 Pseudo Code 주사위를 굴릴 방향을 입력받는다. 명령에 따라 주사위를 굴릴 수 있다면, 해당 칸으로 주사위를 굴린다. 2-1. 주사위가 놓인 ... </summary> </entry> <entry><title>📄 백준 14503번 - 로봇 청소기 (구현)</title><link href="https://poodlepoodle.github.io/posts/algorithm-boj-14503/" rel="alternate" type="text/html" title="📄 백준 14503번 - 로봇 청소기 (구현)" /><published>2022-07-18T14:55:32+09:00</published> <updated>2022-07-18T15:05:21+09:00</updated> <id>https://poodlepoodle.github.io/posts/algorithm-boj-14503/</id> <content src="https://poodlepoodle.github.io/posts/algorithm-boj-14503/" /> <author> <name>Eojin Choi</name> </author> <category term="algorithm" /> <category term="baekjoon" /> <summary> 📄 문제 소개 백준 14503번 : 로봇 청소기 링크 : https://www.acmicpc.net/problem/14503 입력 N, M에 따라 N * M 크기의 지도가 주어지고 로봇 청소기의 위치 및 방향이 주어졌다고 했을 때, 로봇 청소기가 동작을 마친 시점 기준 청소한 칸의 개수를 출력하는 문제이다. 📗 문제풀이 과정 🧐 일단 생각해 볼 것 구현/시뮬레이션 문제를 해결할 때는 문제에서 요구한 어떠한 환경의 규칙이나 물체의 동작을 Pseudo Code로 작성해 보고 그대로 코딩으로 구현해 보려 하는 편인데, 이번 문제 같은 경우는 로봇 청소기의 동작을 잘 정리해서 문제에서 제공했기 때문에 Pseudo Code로 가공하기 편리했다. 로봇 청소기의 동작을 나타낸 Pseudo Co... </summary> </entry> </feed>
